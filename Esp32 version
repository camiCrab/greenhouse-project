#include <ESP32Servo.h>
#include <DHT.h>

// Pines
const int ledPin = 2;
const int lightSensorPin = 34;  // Pines analógicos de ESP32
const int trigPin = 27;
const int echoPin = 26;
const int yl100Pin = 35;
const int dhtPin = 32;          // Pin donde se conecta el DHT22
const int motorPin = 13;        // Pin del motor DC

// Umbrales
const int lightThreshold = 500;
const int distanceThreshold = 30;
const int yl100Threshold = 300;
const float tempThreshold = 23.0; // Umbral de temperatura en grados Celsius

// Configuración del sensor DHT
#define DHTTYPE DHT22
DHT dht(dhtPin, DHTTYPE);

// Servomotores
Servo servoUltrasonic;
Servo servoYL100;

// Función de lectura del sensor de distancia
long readUltrasonicDistance() {
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10); // 10 microseconds pulse duration
    digitalWrite(trigPin, LOW);
    long duration = pulseIn(echoPin, HIGH);
    long distance = duration * 0.034 / 2; // Convertir a cm
    return distance;
}

void setup() {
    // Configuración de pines
    pinMode(ledPin, OUTPUT);
    pinMode(lightSensorPin, INPUT);
    pinMode(trigPin, OUTPUT);
    pinMode(echoPin, INPUT);
    pinMode(yl100Pin, INPUT);
    pinMode(motorPin, OUTPUT); // Configurar el pin del motor como salida

    // Inicialización de servos
    servoUltrasonic.attach(12); // Conectar servomotor al pin 12
    servoYL100.attach(13);      // Conectar servomotor al pin 13

    // Inicialización del sensor DHT
    dht.begin();

    // Inicialización del Serial Monitor para depuración
    Serial.begin(9600);
}

void loop() {
    // Leer sensor de luz
    int lightLevel = analogRead(lightSensorPin);
    // Si no hay luz, encender LED
    if (lightLevel < lightThreshold) {
        digitalWrite(ledPin, HIGH);
    } else {
        digitalWrite(ledPin, LOW);
    }

    // Leer sensor ultrasónico
    long distance = readUltrasonicDistance();
    Serial.print("Distancia: ");
    Serial.print(distance);
    Serial.println(" cm");

    // Si la distancia es mayor a 30 cm, mover servomotor
    if (distance > distanceThreshold) {
        servoUltrasonic.write(90); // Ajusta el ángulo según sea necesario
    } else {
        servoUltrasonic.write(0);  // Ajusta el ángulo según sea necesario
    }

    // Leer sensor YL-100
    int yl100Value = analogRead(yl100Pin);
    // Si el sensor YL-100 está seco, mover servomotor
    if (yl100Value > yl100Threshold) {
        servoYL100.write(90); // Ajusta el ángulo según sea necesario
    } else {
        servoYL100.write(0);  // Ajusta el ángulo según sea necesario
    }

    // Leer sensor DHT22
    float h = dht.readHumidity();
    float t = dht.readTemperature();

    // Comprobar si la lectura es correcta
    if (isnan(h) || isnan(t)) {
        Serial.println("Error al leer el sensor DHT22");
    } else {
        Serial.print("Humedad: ");
        Serial.print(h);
        Serial.print(" %\t");
        Serial.print("Temperatura: ");
        Serial.print(t);
        Serial.println(" *C");

        // Si la temperatura es superior a 23 grados, activar motor DC
        if (t > tempThreshold) {
            digitalWrite(motorPin, HIGH); // Activar motor
        } else {
            digitalWrite(motorPin, LOW); // Desactivar motor
        }
    }

    // Esperar un corto período antes de la siguiente lectura
    delay(2000); // El sensor DHT22 necesita un mínimo de 2 segundos entre lecturas
}
